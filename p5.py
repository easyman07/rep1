# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OpgW_CEfg04QhZKbNRstGh75qaJuEpFJ
"""

# Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.stattools import adfuller
from statsmodels.graphics.tsaplots import plot_acf, plot_pacf
from statsmodels.tsa.arima.model import ARIMA

# Step 1: Visualize the Time Series Data
# Load the dataset directly from URL
url = "https://raw.githubusercontent.com/jbrownlee/Datasets/master/airline-passengers.csv"
df = pd.read_csv(url)

# Convert 'Month' column to datetime format and set it as index
df['Month'] = pd.to_datetime(df['Month'])
df.set_index('Month', inplace=True)

# Plot the time series data
plt.figure(figsize=(10, 6))
plt.plot(df.index, df['Passengers'])
plt.title('Passenger Counts Over Time')
plt.xlabel('Date')
plt.ylabel('Passenger Count')
plt.show()

# Step 2: Identify if the data is stationary
# Perform Augmented Dickey-Fuller test for stationarity
adf_result = adfuller(df['Passengers'])
print("ADF Statistic:", adf_result[0])
print("p-value:", adf_result[1])
print("Critical Values:", adf_result[4])

# Step 3: Plot the Correlation and Auto Correlation Charts
# Plot ACF and PACF
plot_acf(df['Passengers'], lags=30)
plot_pacf(df['Passengers'], lags=30)
plt.show()

# Step 4: Construct the ARIMA Model
# Fit ARIMA model
model = ARIMA(df['Passengers'], order=(5,1,0)) # Example order: ARIMA(p,d,q)
model_fit = model.fit()

# Summary of the model
print(model_fit.summary())

# Plot residual errors
residuals = pd.DataFrame(model_fit.resid)
residuals.plot()
plt.title('ARIMA Model Residuals')
plt.show()

# Plot actual vs fitted values
plt.figure(figsize=(10, 6))
plt.plot(df.index, df['Passengers'], label='Actual')
plt.plot(df.index, model_fit.fittedvalues, color='red', label='Fitted')
plt.title('Actual vs Fitted Values')
plt.xlabel('Date')
plt.ylabel('Passenger Count')
plt.legend()
plt.show()